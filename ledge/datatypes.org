#+TITLE: DataTypes

#+PROPERTY: header-args :eval never :tangle ./datatypes.py

#+BEGIN_SRC python :exports none
  """
  This file is generated using an accompanying org file.
  Do not edit manually.
  """
#+END_SRC

Here we define the data types that we work on. Most of the types can be seen as
a timeseries or a numpy array. The timeseries view is useful for indexing since
we might have better slices available based on the time units that we work on.
Numpy view is useful for efficient calculations.

To speed up indexing, we usually use a layer indirection like using the ~Index~ in
~pandas.Series~. Though since pandas doesn't work nicely with arbitrary
dimensional matrix, we use [[https://github.com/pydata/xarray][xarray]] as our basic time series type.

#+BEGIN_SRC python
import xarray as xr
#+END_SRC

* Types

There are the following basic types we will need:

1. The truth series
2. Prediction series
3. Loss series
4. Weights

First three are matrices with the first dimension indexed by the common unit of
timepoint we are working with. /Weights/ is a single dimension array indexed by
component model ids.

** Truth
Usually this will be a single dimension array indexed by a definite time unit.
As an attribute, a truth series might have a ~lag~ value set. If this is not set,
then the truth is considered as final.

#+BEGIN_SRC python
Truth = xr.DataArray
#+END_SRC

** Prediction
This contains a prediction from a model. This might be an n-dimensional array
indexed by the same time units as the truth. Since a model provides live
predictions, it doesn't have ~lag~ attribute. The required attribute is ~model~
(model identifier) which is used to match with weights.

#+BEGIN_SRC python
Prediction = xr.DataArray
#+END_SRC

** Loss
Loss is generated by a loss function which takes in a prediction series and a
truth series. It carries the ~model~ attribute and can have a ~lag~ attribute if the
truth it came from had a ~lag~.

#+BEGIN_SRC python
Loss = xr.DataArray
#+END_SRC

** Weight
This defines the weights assigned to models. The ~coords~ match the ~model~ from
predictions.

#+BEGIN_SRC python
Weight = xr.DataArray
#+END_SRC
